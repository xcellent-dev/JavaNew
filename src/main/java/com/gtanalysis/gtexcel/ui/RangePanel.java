/*
 */
package com.gtanalysis.gtexcel.ui;

import com.gtanalysis.gtexcel.model.ExcelCellRange;
import java.awt.Component;
import java.awt.event.ContainerEvent;
import java.awt.event.ContainerListener;
import java.util.ArrayList;
import java.util.List;
import org.jdesktop.beansbinding.BindingGroup;

/**
 *
 * @author nkabiliravi
 */
public class RangePanel extends javax.swing.JPanel {

    private final SheetPanel sheetPanel;

    private BindingGroup bindingGroup;

    private final boolean editChart;

    public RangePanel(String title, SheetPanel sheetPanel, boolean editChart) {
        this.sheetPanel = sheetPanel;
        this.editChart = editChart;
        initComponents();
        initCustom(title);
    }

    public void validateRanges() {
        for (Component component : pickRangePanel.getComponents()) {
            if (component instanceof DataRangePickerPanel) {
                DataRangePickerPanel dataRangePickerPanel = (DataRangePickerPanel) component;
                dataRangePickerPanel.validateRange();
            }
        }
    }

    private void initCustom(String title) {
        this.panelTitleLabel.setText(title);
        bindingGroup = new BindingGroup();
        initPickRangeContainer();
        bindingGroup.bind();
    }

    private void initPickRangeContainer() {
        pickRangeContainer.setAutoscrolls(true);
        pickRangePanel.addContainerListener(new ContainerListener() {
            @Override
            public void componentAdded(ContainerEvent e) {
                pickRangePanel.updateUI();
            }

            @Override
            public void componentRemoved(ContainerEvent e) {
                pickRangePanel.updateUI();
            }
        });
        if (!editChart) {
            createDataRangePickerPanel();
        }
    }

    public List<ExcelCellRange> getDataRanges() {
        List<ExcelCellRange> result = new ArrayList<>();
        for (Component component : pickRangePanel.getComponents()) {
            if (component instanceof DataRangePickerPanel) {
                DataRangePickerPanel dataRangePickerPanel = (DataRangePickerPanel) component;
                result.add(dataRangePickerPanel.getExcelCellRange());
            }
        }
        return result;
    }

    public void setDataRanges(List<ExcelCellRange> dataRanges) {
        if (dataRanges != null && !dataRanges.isEmpty()) {
            dataRanges.stream().forEach((dataRange) -> {
                DataRangePickerPanel dataRangePickerPanel = createDataRangePickerPanel();
                dataRangePickerPanel.setExcelCellRange(dataRange);
            });
        }
    }

    private DataRangePickerPanel createDataRangePickerPanel() {
        DataRangePickerPanel dataRangePickerPanel = new DataRangePickerPanel(sheetPanel, editChart);
        pickRangePanel.add(dataRangePickerPanel);
        return dataRangePickerPanel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        panelTitleLabel = new javax.swing.JLabel();
        dataRangePanel = new javax.swing.JPanel();
        dataRangeLabel = new javax.swing.JLabel();
        addRangeButton = new javax.swing.JButton();
        pickRangeContainer = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pickRangePanel = new javax.swing.JPanel();

        setLayout(new java.awt.GridBagLayout());

        panelTitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        add(panelTitleLabel, gridBagConstraints);

        dataRangePanel.setLayout(new java.awt.GridBagLayout());

        dataRangeLabel.setText("Data Range:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        dataRangePanel.add(dataRangeLabel, gridBagConstraints);

        addRangeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/edit-add.png"))); // NOI18N
        addRangeButton.setPreferredSize(new java.awt.Dimension(40, 29));
        addRangeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRangeButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        dataRangePanel.add(addRangeButton, gridBagConstraints);

        pickRangeContainer.setAutoscrolls(true);
        pickRangeContainer.setLayout(new java.awt.GridLayout());

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        pickRangePanel.setLayout(new org.jdesktop.swingx.VerticalLayout());
        jScrollPane1.setViewportView(pickRangePanel);

        pickRangeContainer.add(jScrollPane1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        dataRangePanel.add(pickRangeContainer, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        add(dataRangePanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void addRangeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRangeButtonActionPerformed
        createDataRangePickerPanel();
    }//GEN-LAST:event_addRangeButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addRangeButton;
    private javax.swing.JLabel dataRangeLabel;
    private javax.swing.JPanel dataRangePanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel panelTitleLabel;
    private javax.swing.JPanel pickRangeContainer;
    private javax.swing.JPanel pickRangePanel;
    // End of variables declaration//GEN-END:variables

}
