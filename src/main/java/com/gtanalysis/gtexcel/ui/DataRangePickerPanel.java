/*
 */
package com.gtanalysis.gtexcel.ui;

import com.gtanalysis.gtexcel.model.ExcelCellRange;
import com.gtanalysis.gtexcel.util.RangeUtil;
import java.awt.event.ItemEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author nkabiliravi
 */
public class DataRangePickerPanel extends javax.swing.JPanel {

    private final ExcelCellRange excelCellRange = new ExcelCellRange();
    private final SheetPanel sheetPanel;
    private final boolean editChart;

    public DataRangePickerPanel(SheetPanel sheetPanel, boolean editChart) {
        this(null, sheetPanel, editChart);
    }

    /**
     * Creates new form DataRangePickerPanel
     *
     * @param title
     * @param sheetPanel
     */
    public DataRangePickerPanel(String title, SheetPanel sheetPanel, boolean editChart) {
        this.sheetPanel = sheetPanel;
        this.editChart = editChart;
        initComponents();
        initCustom(title);
    }

    public void validateRange() {
        if (!getExcelCellRange().toString().matches(RangeUtil.RANGES_REGEX)) {
            String componenetTitle = titleLabel.getText();
            if (componenetTitle == null) {
                if (this.getParent() != null) {
                    componenetTitle = Integer.toString(this.getParent().getComponentCount() + 1);
                }
            }
            throw new RuntimeException("Range is not valid" + componenetTitle != null ? " in " + componenetTitle : "");
        }
    }

    public ExcelCellRange getExcelCellRange() {
        return excelCellRange;
    }

    public void setExcelCellRange(ExcelCellRange excelCellRange) {
        this.excelCellRange.setSheetName(excelCellRange.getSheetName());
        this.excelCellRange.setFromCell(excelCellRange.getFromCell());
        this.excelCellRange.setToCell(excelCellRange.getToCell());
        this.sheetComboBox.setSelectedItem(this.excelCellRange.getSheetName());
        this.fromComboBox.setSelectedItem(this.excelCellRange.getFromCell());
        this.toComboBox.setSelectedItem(this.excelCellRange.getToCell());
    }

    public void setDeleteButtonVisible(boolean visible) {
        this.deleteButton.setVisible(visible);
    }

    private void initCustom(String title) {
        if (title != null) {
            this.titleLabel.setText(title);
            this.titleLabel.setVisible(true);
        } else {
            this.titleLabel.setVisible(false);
        }
        String[] sheetNames = this.sheetPanel.getWorkbookModel().retrieveSheetNames();
        this.sheetComboBox.setModel(new DefaultComboBoxModel<>(sheetNames));
        this.sheetComboBox.addItemListener((ItemEvent e) -> {
            String selectedItem = (String) e.getItem();
            if (selectedItem != null) {
                String[] cellNames = this.sheetPanel.getWorkbookPanel().retrieveSheetCellNames(selectedItem);
                DataRangePickerPanel.this.fromComboBox.setModel(new DefaultComboBoxModel<>(cellNames));
                DataRangePickerPanel.this.toComboBox.setModel(new DefaultComboBoxModel<>(cellNames));
            }
        });
        this.sheetComboBox.setSelectedItem(null);
        this.sheetComboBox.setSelectedItem(sheetPanel.getSheetName());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        titleLabel = new javax.swing.JLabel();
        sheetNameLabel = new javax.swing.JLabel();
        sheetComboBox = new javax.swing.JComboBox<>();
        fromLabel = new javax.swing.JLabel();
        fromComboBox = new javax.swing.JComboBox<>();
        toLabel = new javax.swing.JLabel();
        toComboBox = new javax.swing.JComboBox<>();
        deleteButton = new javax.swing.JButton();

        setLayout(new java.awt.GridBagLayout());

        titleLabel.setText("Title");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 10, 0);
        add(titleLabel, gridBagConstraints);

        sheetNameLabel.setText("Sheet Name:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        add(sheetNameLabel, gridBagConstraints);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${excelCellRange.sheetName}"), sheetComboBox, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        add(sheetComboBox, gridBagConstraints);

        fromLabel.setText("From:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        add(fromLabel, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${excelCellRange.fromCell}"), fromComboBox, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        add(fromComboBox, gridBagConstraints);

        toLabel.setText("To:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        add(toLabel, gridBagConstraints);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${excelCellRange.toCell}"), toComboBox, org.jdesktop.beansbinding.BeanProperty.create("selectedItem"));
        bindingGroup.addBinding(binding);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        add(toComboBox, gridBagConstraints);

        deleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/dialog-close-2.png"))); // NOI18N
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        add(deleteButton, gridBagConstraints);

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (JOptionPane.showConfirmDialog(this,
                "Do you want to delete this range?", "Delete Confirmation",
                JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            getParent().remove(this);
        }
    }//GEN-LAST:event_deleteButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JComboBox<String> fromComboBox;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JComboBox<String> sheetComboBox;
    private javax.swing.JLabel sheetNameLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JComboBox<String> toComboBox;
    private javax.swing.JLabel toLabel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}
