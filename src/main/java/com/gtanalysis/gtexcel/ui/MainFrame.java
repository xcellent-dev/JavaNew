package com.gtanalysis.gtexcel.ui;

import com.gtanalysis.gtexcel.model.SortType;
import com.gtanalysis.gtexcel.model.listener.WorkbookEvent;
import com.gtanalysis.gtexcel.model.listener.WorkbookListener;
import java.beans.PropertyChangeEvent;
import java.io.IOException;
import java.io.InputStream;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author nkabiliravi
 */
public class MainFrame extends javax.swing.JFrame {

    private String aboutText;

    /**
     * Creates new form Main
     */
    public MainFrame() {
        initComponents();
        initCustom();
    }

    public WorkbookPanel getWorkbookPanel() {
        return workbookPanel;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        mainPanel = new javax.swing.JPanel();
        mainToolBar = new javax.swing.JToolBar();
        newButton = new javax.swing.JButton();
        openButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        undoRedoToolBarSeparator = new javax.swing.JToolBar.Separator();
        undoButton = new javax.swing.JButton();
        redoButton = new javax.swing.JButton();
        copyPasteToolBarSeparator = new javax.swing.JToolBar.Separator();
        copyButton = new javax.swing.JButton();
        cutButton = new javax.swing.JButton();
        pasteButton = new javax.swing.JButton();
        tableOperationsSeparator = new javax.swing.JToolBar.Separator();
        insertColumnButton = new javax.swing.JButton();
        insertRowButton = new javax.swing.JButton();
        removeColumnButton = new javax.swing.JButton();
        removeRowButton = new javax.swing.JButton();
        alignmentSeparator = new javax.swing.JToolBar.Separator();
        alignHorizontalLeftButton = new javax.swing.JButton();
        alignHorizontalCenterButton = new javax.swing.JButton();
        alignHorizontalRightButton = new javax.swing.JButton();
        alignVerticalTopButton = new javax.swing.JButton();
        alignVerticalMiddleButton = new javax.swing.JButton();
        alignVerticalBottomButton = new javax.swing.JButton();
        fontStyleSeparator = new javax.swing.JToolBar.Separator();
        styleBoldButton = new javax.swing.JButton();
        styleItalicButton = new javax.swing.JButton();
        styleUnderlineButton = new javax.swing.JButton();
        sortSeparator = new javax.swing.JToolBar.Separator();
        sortAscendingButton = new javax.swing.JButton();
        sortDescendingButton = new javax.swing.JButton();
        chartSeparator = new javax.swing.JToolBar.Separator();
        addChartButton = new javax.swing.JButton();
        editChartButton = new javax.swing.JButton();
        removeChartButton = new javax.swing.JButton();
        chartVisibilityToggleButton = new javax.swing.JToggleButton();
        workbookPanel = new com.gtanalysis.gtexcel.ui.WorkbookPanel();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newMenuItem = new javax.swing.JMenuItem();
        newSeparator = new javax.swing.JPopupMenu.Separator();
        openMenuItem = new javax.swing.JMenuItem();
        saveMenuItem = new javax.swing.JMenuItem();
        saveAsMenuItem = new javax.swing.JMenuItem();
        fileIOSeparator = new javax.swing.JPopupMenu.Separator();
        exportToExcelCSVMenuItem = new javax.swing.JMenuItem();
        exportToUnixCSVMenuItem = new javax.swing.JMenuItem();
        exportSeparator = new javax.swing.JPopupMenu.Separator();
        printMenuItem = new javax.swing.JMenuItem();
        printSeparator = new javax.swing.JPopupMenu.Separator();
        closeMenuItem = new javax.swing.JMenuItem();
        closeSeparator = new javax.swing.JPopupMenu.Separator();
        exitMenuItem = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        undoMenuItem = new javax.swing.JMenuItem();
        redoMenuItem = new javax.swing.JMenuItem();
        undoRedoSeparator = new javax.swing.JPopupMenu.Separator();
        copyMenuItem = new javax.swing.JMenuItem();
        cutMenuItem = new javax.swing.JMenuItem();
        pasteMenuItem = new javax.swing.JMenuItem();
        findReplaceMenuItem = new javax.swing.JMenuItem();
        sheetMenu = new javax.swing.JMenu();
        insertColumnMenuItem = new javax.swing.JMenuItem();
        insertRowMenuItem = new javax.swing.JMenuItem();
        removeColumnMenuItem = new javax.swing.JMenuItem();
        removeRowMenuItem = new javax.swing.JMenuItem();
        sheetAddRowSeparator = new javax.swing.JPopupMenu.Separator();
        alignmentMenu = new javax.swing.JMenu();
        alignLeftMenuItem = new javax.swing.JMenuItem();
        alignCenterMenuItem = new javax.swing.JMenuItem();
        alignRightMenuItem = new javax.swing.JMenuItem();
        horizontalSeparator = new javax.swing.JPopupMenu.Separator();
        alignTopMenuItem = new javax.swing.JMenuItem();
        alignMiddleMenuItem = new javax.swing.JMenuItem();
        alignBottomMenuItem = new javax.swing.JMenuItem();
        sheetSortMenu = new javax.swing.JMenu();
        sortAscendingMenuItem = new javax.swing.JMenuItem();
        sortDescendingMenuItem = new javax.swing.JMenuItem();
        chartMenu = new javax.swing.JMenu();
        showChartCheckBoxMenuItem = new javax.swing.JCheckBoxMenuItem();
        showChartSeparator = new javax.swing.JPopupMenu.Separator();
        addChartMenuItem = new javax.swing.JMenuItem();
        editChartMenuItem = new javax.swing.JMenuItem();
        removeChartMenuItem = new javax.swing.JMenuItem();
        helpMenu = new javax.swing.JMenu();
        contentMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("GT Excel");
        setMinimumSize(new java.awt.Dimension(800, 600));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        mainPanel.setLayout(new java.awt.GridBagLayout());

        mainToolBar.setFloatable(false);
        mainToolBar.setRollover(true);

        newButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/document-new-6.png"))); // NOI18N
        newButton.setToolTipText("New");
        newButton.setFocusable(false);
        newButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        newButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(newButton);

        openButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/folder-green.png"))); // NOI18N
        openButton.setToolTipText("Open");
        openButton.setFocusable(false);
        openButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        openButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(openButton);

        saveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/document-save-5.png"))); // NOI18N
        saveButton.setToolTipText("Save");
        saveButton.setFocusable(false);
        saveButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, workbookPanel, org.jdesktop.beansbinding.ELProperty.create("${workbookVisible}"), saveButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(saveButton);
        mainToolBar.add(undoRedoToolBarSeparator);

        undoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/edit-undo-7.png"))); // NOI18N
        undoButton.setToolTipText("Insert Column");
        undoButton.setFocusable(false);
        undoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        undoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${undoEnabled}"), undoButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        undoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(undoButton);

        redoButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/edit-redo-7.png"))); // NOI18N
        redoButton.setToolTipText("Insert Column");
        redoButton.setFocusable(false);
        redoButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        redoButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${redoEnabled}"), redoButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        redoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(redoButton);
        mainToolBar.add(copyPasteToolBarSeparator);

        copyButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/edit-copy-3.png"))); // NOI18N
        copyButton.setToolTipText("Copy");
        copyButton.setFocusable(false);
        copyButton.setHideActionText(true);
        copyButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        copyButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        copyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(copyButton);

        cutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/edit-cut-5.png"))); // NOI18N
        cutButton.setToolTipText("Cut");
        cutButton.setFocusable(false);
        cutButton.setHideActionText(true);
        cutButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cutButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        cutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(cutButton);

        pasteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/edit-paste-3.png"))); // NOI18N
        pasteButton.setToolTipText("Paste");
        pasteButton.setFocusable(false);
        pasteButton.setHideActionText(true);
        pasteButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pasteButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, workbookPanel, org.jdesktop.beansbinding.ELProperty.create("${pasteEnabled}"), pasteButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        pasteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(pasteButton);
        mainToolBar.add(tableOperationsSeparator);

        insertColumnButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/insert-table-column.png"))); // NOI18N
        insertColumnButton.setToolTipText("Insert Column");
        insertColumnButton.setFocusable(false);
        insertColumnButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        insertColumnButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        insertColumnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertColumnButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(insertColumnButton);

        insertRowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/insert-table-row.png"))); // NOI18N
        insertRowButton.setToolTipText("Insert Row");
        insertRowButton.setFocusable(false);
        insertRowButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        insertRowButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        insertRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertRowButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(insertRowButton);

        removeColumnButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/table-column-delete.png"))); // NOI18N
        removeColumnButton.setToolTipText("Remove Column");
        removeColumnButton.setFocusable(false);
        removeColumnButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeColumnButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        removeColumnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeColumnButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(removeColumnButton);

        removeRowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/table-row-delete.png"))); // NOI18N
        removeRowButton.setToolTipText("Remove Row");
        removeRowButton.setFocusable(false);
        removeRowButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeRowButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        removeRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRowButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(removeRowButton);
        mainToolBar.add(alignmentSeparator);

        alignHorizontalLeftButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/format-text-align-left.png"))); // NOI18N
        alignHorizontalLeftButton.setToolTipText("Left");
        alignHorizontalLeftButton.setFocusable(false);
        alignHorizontalLeftButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alignHorizontalLeftButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alignHorizontalLeftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignHorizontalLeftButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(alignHorizontalLeftButton);

        alignHorizontalCenterButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/format-text-align-center.png"))); // NOI18N
        alignHorizontalCenterButton.setToolTipText("Horizantal Center");
        alignHorizontalCenterButton.setFocusable(false);
        alignHorizontalCenterButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alignHorizontalCenterButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alignHorizontalCenterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignHorizontalCenterButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(alignHorizontalCenterButton);

        alignHorizontalRightButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/format-text-align-right.png"))); // NOI18N
        alignHorizontalRightButton.setToolTipText("Right");
        alignHorizontalRightButton.setFocusable(false);
        alignHorizontalRightButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alignHorizontalRightButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alignHorizontalRightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignHorizontalRightButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(alignHorizontalRightButton);

        alignVerticalTopButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/align-vertical-top.png"))); // NOI18N
        alignVerticalTopButton.setToolTipText("Top");
        alignVerticalTopButton.setFocusable(false);
        alignVerticalTopButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alignVerticalTopButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alignVerticalTopButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignVerticalTopButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(alignVerticalTopButton);

        alignVerticalMiddleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/align-text-middle.png"))); // NOI18N
        alignVerticalMiddleButton.setToolTipText("");
        alignVerticalMiddleButton.setFocusable(false);
        alignVerticalMiddleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alignVerticalMiddleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alignVerticalMiddleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignVerticalMiddleButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(alignVerticalMiddleButton);

        alignVerticalBottomButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/align-vertical-bottom.png"))); // NOI18N
        alignVerticalBottomButton.setToolTipText("Bottom");
        alignVerticalBottomButton.setFocusable(false);
        alignVerticalBottomButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        alignVerticalBottomButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        alignVerticalBottomButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignVerticalBottomButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(alignVerticalBottomButton);
        mainToolBar.add(fontStyleSeparator);

        styleBoldButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/format-text-bold-4.png"))); // NOI18N
        styleBoldButton.setToolTipText("Bold");
        styleBoldButton.setFocusable(false);
        styleBoldButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        styleBoldButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        styleBoldButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                styleBoldButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(styleBoldButton);

        styleItalicButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/format-text-italic-4.png"))); // NOI18N
        styleItalicButton.setToolTipText("Italic");
        styleItalicButton.setFocusable(false);
        styleItalicButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        styleItalicButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        styleItalicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                styleItalicButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(styleItalicButton);

        styleUnderlineButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/format-text-underline-4.png"))); // NOI18N
        styleUnderlineButton.setToolTipText("Underline");
        styleUnderlineButton.setFocusable(false);
        styleUnderlineButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        styleUnderlineButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        styleUnderlineButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                styleUnderlineButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(styleUnderlineButton);
        mainToolBar.add(sortSeparator);

        sortAscendingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/edit-sort-increase.png"))); // NOI18N
        sortAscendingButton.setToolTipText("Ascending");
        sortAscendingButton.setFocusable(false);
        sortAscendingButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sortAscendingButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sortAscendingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortAscendingButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(sortAscendingButton);

        sortDescendingButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/edit-sort-decrease.png"))); // NOI18N
        sortDescendingButton.setToolTipText("Descending");
        sortDescendingButton.setFocusable(false);
        sortDescendingButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        sortDescendingButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        sortDescendingButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortDescendingButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(sortDescendingButton);
        mainToolBar.add(chartSeparator);

        addChartButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/chart-curve-add.png"))); // NOI18N
        addChartButton.setToolTipText("Add Chart");
        addChartButton.setFocusable(false);
        addChartButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        addChartButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        addChartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addChartButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(addChartButton);

        editChartButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/chart-curve-edit.png"))); // NOI18N
        editChartButton.setToolTipText("Edit Chart");
        editChartButton.setFocusable(false);
        editChartButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        editChartButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, workbookPanel, org.jdesktop.beansbinding.ELProperty.create("${chartSelected}"), editChartButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        editChartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editChartButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(editChartButton);

        removeChartButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/chart-curve-delete.png"))); // NOI18N
        removeChartButton.setToolTipText("Remove Chart");
        removeChartButton.setFocusable(false);
        removeChartButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        removeChartButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, workbookPanel, org.jdesktop.beansbinding.ELProperty.create("${chartSelected}"), removeChartButton, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        removeChartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeChartButtonActionPerformed(evt);
            }
        });
        mainToolBar.add(removeChartButton);

        chartVisibilityToggleButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/office-chart-pie.png"))); // NOI18N
        chartVisibilityToggleButton.setFocusable(false);
        chartVisibilityToggleButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        chartVisibilityToggleButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, workbookPanel, org.jdesktop.beansbinding.ELProperty.create("${chartPanelVisible}"), chartVisibilityToggleButton, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        mainToolBar.add(chartVisibilityToggleButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        mainPanel.add(mainToolBar, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        mainPanel.add(workbookPanel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(mainPanel, gridBagConstraints);

        fileMenu.setMnemonic('f');
        fileMenu.setText("File");

        newMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/document-new-6.png"))); // NOI18N
        newMenuItem.setText("New");
        newMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(newMenuItem);
        fileMenu.add(newSeparator);

        openMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/folder-green.png"))); // NOI18N
        openMenuItem.setMnemonic('o');
        openMenuItem.setText("Open");
        openMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(openMenuItem);

        saveMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/document-save-5.png"))); // NOI18N
        saveMenuItem.setMnemonic('s');
        saveMenuItem.setText("Save");
        saveMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveMenuItem);

        saveAsMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/document-save-as-5.png"))); // NOI18N
        saveAsMenuItem.setMnemonic('a');
        saveAsMenuItem.setText("Save As ...");
        saveAsMenuItem.setDisplayedMnemonicIndex(5);
        saveAsMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveAsMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveAsMenuItem);
        fileMenu.add(fileIOSeparator);

        exportToExcelCSVMenuItem.setText("Export To CSV (Excel)");
        exportToExcelCSVMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportToExcelCSVMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exportToExcelCSVMenuItem);

        exportToUnixCSVMenuItem.setText("Export To CSV (Unix)");
        exportToUnixCSVMenuItem.setToolTipText("");
        exportToUnixCSVMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportToUnixCSVMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exportToUnixCSVMenuItem);
        fileMenu.add(exportSeparator);

        printMenuItem.setText("Print ...");
        printMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(printMenuItem);
        fileMenu.add(printSeparator);

        closeMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/dialog-close-2.png"))); // NOI18N
        closeMenuItem.setText("Close");
        closeMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(closeMenuItem);
        fileMenu.add(closeSeparator);

        exitMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/application-exit.png"))); // NOI18N
        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        editMenu.setMnemonic('e');
        editMenu.setText("Edit");

        undoMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
        undoMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/edit-undo-7.png"))); // NOI18N
        undoMenuItem.setMnemonic('U');
        undoMenuItem.setText("Undo");
        undoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(undoMenuItem);

        redoMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        redoMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/edit-redo-7.png"))); // NOI18N
        redoMenuItem.setMnemonic('R');
        redoMenuItem.setText("Redo");
        redoMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(redoMenuItem);
        editMenu.add(undoRedoSeparator);

        copyMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/edit-copy-3.png"))); // NOI18N
        copyMenuItem.setMnemonic('y');
        copyMenuItem.setText("Copy");
        copyMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                copyMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(copyMenuItem);

        cutMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/edit-cut-5.png"))); // NOI18N
        cutMenuItem.setMnemonic('t');
        cutMenuItem.setText("Cut");
        cutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cutMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(cutMenuItem);

        pasteMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/edit-paste-3.png"))); // NOI18N
        pasteMenuItem.setMnemonic('p');
        pasteMenuItem.setText("Paste");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, workbookPanel, org.jdesktop.beansbinding.ELProperty.create("${pasteEnabled}"), pasteMenuItem, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        pasteMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pasteMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(pasteMenuItem);

        findReplaceMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        findReplaceMenuItem.setText("Find/Replace");
        findReplaceMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findReplaceMenuItemActionPerformed(evt);
            }
        });
        editMenu.add(findReplaceMenuItem);

        menuBar.add(editMenu);

        sheetMenu.setText("Sheet");

        insertColumnMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        insertColumnMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/insert-table-column.png"))); // NOI18N
        insertColumnMenuItem.setText("Insert Column");
        insertColumnMenuItem.setToolTipText("");
        insertColumnMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertColumnMenuItemActionPerformed(evt);
            }
        });
        sheetMenu.add(insertColumnMenuItem);

        insertRowMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        insertRowMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/insert-table-row.png"))); // NOI18N
        insertRowMenuItem.setText("Insert Row");
        insertRowMenuItem.setToolTipText("");
        insertRowMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertRowMenuItemActionPerformed(evt);
            }
        });
        sheetMenu.add(insertRowMenuItem);

        removeColumnMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        removeColumnMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/table-column-delete.png"))); // NOI18N
        removeColumnMenuItem.setText("Remove Column");
        removeColumnMenuItem.setToolTipText("");
        removeColumnMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeColumnMenuItemActionPerformed(evt);
            }
        });
        sheetMenu.add(removeColumnMenuItem);

        removeRowMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        removeRowMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/table-row-delete.png"))); // NOI18N
        removeRowMenuItem.setText("Remove Row");
        removeRowMenuItem.setToolTipText("");
        removeRowMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRowMenuItemActionPerformed(evt);
            }
        });
        sheetMenu.add(removeRowMenuItem);
        sheetMenu.add(sheetAddRowSeparator);

        alignmentMenu.setText("Alignment");

        alignLeftMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/format-text-align-left.png"))); // NOI18N
        alignLeftMenuItem.setText("Left");
        alignLeftMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignLeftMenuItemActionPerformed(evt);
            }
        });
        alignmentMenu.add(alignLeftMenuItem);

        alignCenterMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/format-text-align-center.png"))); // NOI18N
        alignCenterMenuItem.setText("Center");
        alignCenterMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignCenterMenuItemActionPerformed(evt);
            }
        });
        alignmentMenu.add(alignCenterMenuItem);

        alignRightMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/format-text-align-right.png"))); // NOI18N
        alignRightMenuItem.setText("Right");
        alignRightMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignRightMenuItemActionPerformed(evt);
            }
        });
        alignmentMenu.add(alignRightMenuItem);
        alignmentMenu.add(horizontalSeparator);

        alignTopMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/align-vertical-top.png"))); // NOI18N
        alignTopMenuItem.setText("Top");
        alignTopMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignTopMenuItemActionPerformed(evt);
            }
        });
        alignmentMenu.add(alignTopMenuItem);

        alignMiddleMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/align-text-middle.png"))); // NOI18N
        alignMiddleMenuItem.setText("Middlle");
        alignMiddleMenuItem.setToolTipText("");
        alignMiddleMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignMiddleMenuItemActionPerformed(evt);
            }
        });
        alignmentMenu.add(alignMiddleMenuItem);

        alignBottomMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/align-vertical-bottom.png"))); // NOI18N
        alignBottomMenuItem.setText("Bottom");
        alignBottomMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                alignBottomMenuItemActionPerformed(evt);
            }
        });
        alignmentMenu.add(alignBottomMenuItem);

        sheetMenu.add(alignmentMenu);

        sheetSortMenu.setText("Sort Column");

        sortAscendingMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/edit-sort-increase.png"))); // NOI18N
        sortAscendingMenuItem.setText("Ascending");
        sortAscendingMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortAscendingMenuItemActionPerformed(evt);
            }
        });
        sheetSortMenu.add(sortAscendingMenuItem);

        sortDescendingMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/edit-sort-decrease.png"))); // NOI18N
        sortDescendingMenuItem.setText("Descending");
        sortDescendingMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sortDescendingMenuItemActionPerformed(evt);
            }
        });
        sheetSortMenu.add(sortDescendingMenuItem);

        sheetMenu.add(sheetSortMenu);

        menuBar.add(sheetMenu);

        chartMenu.setText("Chart");

        showChartCheckBoxMenuItem.setText("Show Chart");

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, workbookPanel, org.jdesktop.beansbinding.ELProperty.create("${chartPanelVisible}"), showChartCheckBoxMenuItem, org.jdesktop.beansbinding.BeanProperty.create("selected"));
        bindingGroup.addBinding(binding);

        chartMenu.add(showChartCheckBoxMenuItem);
        chartMenu.add(showChartSeparator);

        addChartMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/chart-curve-add.png"))); // NOI18N
        addChartMenuItem.setText("Add Chart");
        addChartMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addChartMenuItemActionPerformed(evt);
            }
        });
        chartMenu.add(addChartMenuItem);

        editChartMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/chart-curve-edit.png"))); // NOI18N
        editChartMenuItem.setText("Edit Chart");
        chartMenu.add(editChartMenuItem);

        removeChartMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/chart-curve-delete.png"))); // NOI18N
        removeChartMenuItem.setText("Remove Chart");
        chartMenu.add(removeChartMenuItem);

        menuBar.add(chartMenu);

        helpMenu.setMnemonic('h');
        helpMenu.setText("Help");

        contentMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/16x16/help-2.png"))); // NOI18N
        contentMenuItem.setMnemonic('c');
        contentMenuItem.setText("Contents");
        helpMenu.add(contentMenuItem);

        aboutMenuItem.setMnemonic('a');
        aboutMenuItem.setText("About");
        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutMenuItemActionPerformed(evt);
            }
        });
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        setJMenuBar(menuBar);

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        exitApplication();
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void openMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openMenuItemActionPerformed
        workbookPanel.openFile();
    }//GEN-LAST:event_openMenuItemActionPerformed


    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        workbookPanel.openFile();
    }//GEN-LAST:event_openButtonActionPerformed

    private void saveMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveMenuItemActionPerformed
        workbookPanel.saveFile();
    }//GEN-LAST:event_saveMenuItemActionPerformed

    private void closeMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeMenuItemActionPerformed
        workbookPanel.closeFile();
    }//GEN-LAST:event_closeMenuItemActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        workbookPanel.saveFile();
    }//GEN-LAST:event_saveButtonActionPerformed

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        JOptionPane.showMessageDialog(this,
                getAboutText(),
                "About Kaman Excel",
                JOptionPane.INFORMATION_MESSAGE,
                new ImageIcon(MainFrame.class.getResource("/icon/48x48/gnucash.png")));
    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void saveAsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveAsMenuItemActionPerformed
        workbookPanel.saveFileAs();
    }//GEN-LAST:event_saveAsMenuItemActionPerformed

    private void insertColumnMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertColumnMenuItemActionPerformed
        workbookPanel.insertColumn();
    }//GEN-LAST:event_insertColumnMenuItemActionPerformed

    private void insertColumnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertColumnButtonActionPerformed
        workbookPanel.insertColumn();
    }//GEN-LAST:event_insertColumnButtonActionPerformed

    private void insertRowMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertRowMenuItemActionPerformed
        workbookPanel.insertRow();
    }//GEN-LAST:event_insertRowMenuItemActionPerformed

    private void insertRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertRowButtonActionPerformed
        workbookPanel.insertRow();
    }//GEN-LAST:event_insertRowButtonActionPerformed

    private void removeColumnMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeColumnMenuItemActionPerformed
        workbookPanel.removeColumn();
    }//GEN-LAST:event_removeColumnMenuItemActionPerformed

    private void removeColumnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeColumnButtonActionPerformed
        workbookPanel.removeColumn();
    }//GEN-LAST:event_removeColumnButtonActionPerformed

    private void removeRowMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRowMenuItemActionPerformed
        workbookPanel.removeRow();
    }//GEN-LAST:event_removeRowMenuItemActionPerformed

    private void removeRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRowButtonActionPerformed
        workbookPanel.removeRow();
    }//GEN-LAST:event_removeRowButtonActionPerformed

    private void newButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newButtonActionPerformed
        workbookPanel.newWorkbook();
    }//GEN-LAST:event_newButtonActionPerformed

    private void newMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newMenuItemActionPerformed
        workbookPanel.newWorkbook();
    }//GEN-LAST:event_newMenuItemActionPerformed

    private void exportToExcelCSVMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportToExcelCSVMenuItemActionPerformed
        workbookPanel.exportToExcelCSV();
    }//GEN-LAST:event_exportToExcelCSVMenuItemActionPerformed

    private void exportToUnixCSVMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportToUnixCSVMenuItemActionPerformed
        workbookPanel.exportToUnixCSV();
    }//GEN-LAST:event_exportToUnixCSVMenuItemActionPerformed

    private void alignHorizontalLeftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignHorizontalLeftButtonActionPerformed
        workbookPanel.alignHorizontalLeft();
    }//GEN-LAST:event_alignHorizontalLeftButtonActionPerformed

    private void alignHorizontalCenterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignHorizontalCenterButtonActionPerformed
        workbookPanel.alignHorizontalCenter();
    }//GEN-LAST:event_alignHorizontalCenterButtonActionPerformed

    private void alignHorizontalRightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignHorizontalRightButtonActionPerformed
        workbookPanel.alignHorizontalRight();
    }//GEN-LAST:event_alignHorizontalRightButtonActionPerformed

    private void alignVerticalTopButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignVerticalTopButtonActionPerformed
        workbookPanel.alignVerticalTop();
    }//GEN-LAST:event_alignVerticalTopButtonActionPerformed

    private void alignVerticalMiddleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignVerticalMiddleButtonActionPerformed
        workbookPanel.alignVerticalMiddle();
    }//GEN-LAST:event_alignVerticalMiddleButtonActionPerformed

    private void alignVerticalBottomButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignVerticalBottomButtonActionPerformed
        workbookPanel.alignVerticalBottom();
    }//GEN-LAST:event_alignVerticalBottomButtonActionPerformed

    private void styleBoldButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_styleBoldButtonActionPerformed
        workbookPanel.styleBold();
    }//GEN-LAST:event_styleBoldButtonActionPerformed

    private void styleItalicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_styleItalicButtonActionPerformed
        workbookPanel.styleItalic();
    }//GEN-LAST:event_styleItalicButtonActionPerformed

    private void styleUnderlineButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_styleUnderlineButtonActionPerformed
        workbookPanel.styleUnderline();
    }//GEN-LAST:event_styleUnderlineButtonActionPerformed

    private void sortAscendingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortAscendingButtonActionPerformed
        workbookPanel.sort(SortType.ASCENDING);
    }//GEN-LAST:event_sortAscendingButtonActionPerformed

    private void sortDescendingButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortDescendingButtonActionPerformed
        workbookPanel.sort(SortType.DISCENDING);
    }//GEN-LAST:event_sortDescendingButtonActionPerformed

    private void addChartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addChartButtonActionPerformed
        workbookPanel.addChart();
    }//GEN-LAST:event_addChartButtonActionPerformed

    private void removeChartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeChartButtonActionPerformed
        workbookPanel.removeChart();
    }//GEN-LAST:event_removeChartButtonActionPerformed

    private void editChartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editChartButtonActionPerformed
        workbookPanel.editChart();
    }//GEN-LAST:event_editChartButtonActionPerformed

    private void printMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printMenuItemActionPerformed
        workbookPanel.print();
    }//GEN-LAST:event_printMenuItemActionPerformed

    private void undoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoButtonActionPerformed
        workbookPanel.undo();
    }//GEN-LAST:event_undoButtonActionPerformed

    private void redoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoButtonActionPerformed
        workbookPanel.redo();
    }//GEN-LAST:event_redoButtonActionPerformed

    private void addChartMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addChartMenuItemActionPerformed
        workbookPanel.addChart();
    }//GEN-LAST:event_addChartMenuItemActionPerformed

    private void alignLeftMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignLeftMenuItemActionPerformed
        workbookPanel.alignHorizontalLeft();
    }//GEN-LAST:event_alignLeftMenuItemActionPerformed

    private void undoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoMenuItemActionPerformed
        workbookPanel.undo();
    }//GEN-LAST:event_undoMenuItemActionPerformed

    private void redoMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoMenuItemActionPerformed
        workbookPanel.redo();
    }//GEN-LAST:event_redoMenuItemActionPerformed

    private void copyMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyMenuItemActionPerformed
        workbookPanel.copy();
    }//GEN-LAST:event_copyMenuItemActionPerformed

    private void cutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutMenuItemActionPerformed
        workbookPanel.cut();
    }//GEN-LAST:event_cutMenuItemActionPerformed

    private void pasteMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteMenuItemActionPerformed
        workbookPanel.paste();
    }//GEN-LAST:event_pasteMenuItemActionPerformed

    private void alignCenterMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignCenterMenuItemActionPerformed
        workbookPanel.alignHorizontalCenter();
    }//GEN-LAST:event_alignCenterMenuItemActionPerformed

    private void alignRightMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignRightMenuItemActionPerformed
        workbookPanel.alignHorizontalRight();
    }//GEN-LAST:event_alignRightMenuItemActionPerformed

    private void alignTopMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignTopMenuItemActionPerformed
        workbookPanel.alignVerticalTop();
    }//GEN-LAST:event_alignTopMenuItemActionPerformed

    private void alignMiddleMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignMiddleMenuItemActionPerformed
        workbookPanel.alignVerticalMiddle();
    }//GEN-LAST:event_alignMiddleMenuItemActionPerformed

    private void alignBottomMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_alignBottomMenuItemActionPerformed
        workbookPanel.alignVerticalBottom();
    }//GEN-LAST:event_alignBottomMenuItemActionPerformed

    private void sortAscendingMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortAscendingMenuItemActionPerformed
        workbookPanel.sort(SortType.ASCENDING);
    }//GEN-LAST:event_sortAscendingMenuItemActionPerformed

    private void sortDescendingMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sortDescendingMenuItemActionPerformed
        workbookPanel.sort(SortType.DISCENDING);
    }//GEN-LAST:event_sortDescendingMenuItemActionPerformed

    private void copyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_copyButtonActionPerformed
        workbookPanel.copy();
    }//GEN-LAST:event_copyButtonActionPerformed

    private void cutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cutButtonActionPerformed
        workbookPanel.cut();
    }//GEN-LAST:event_cutButtonActionPerformed

    private void pasteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pasteButtonActionPerformed
        workbookPanel.paste();
    }//GEN-LAST:event_pasteButtonActionPerformed

    private void findReplaceMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findReplaceMenuItemActionPerformed
        workbookPanel.findAndReplace();
    }//GEN-LAST:event_findReplaceMenuItemActionPerformed

    private String getAboutText() {
        if (aboutText == null) {
            InputStream is = MainFrame.class.getResourceAsStream(
                    "/about.txt");
            try {
                byte[] aboutBuffer = new byte[is.available()];
                is.read(aboutBuffer);
                is.close();
                aboutText = new String(aboutBuffer);
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        return aboutText;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem aboutMenuItem;
    private javax.swing.JButton addChartButton;
    private javax.swing.JMenuItem addChartMenuItem;
    private javax.swing.JMenuItem alignBottomMenuItem;
    private javax.swing.JMenuItem alignCenterMenuItem;
    private javax.swing.JButton alignHorizontalCenterButton;
    private javax.swing.JButton alignHorizontalLeftButton;
    private javax.swing.JButton alignHorizontalRightButton;
    private javax.swing.JMenuItem alignLeftMenuItem;
    private javax.swing.JMenuItem alignMiddleMenuItem;
    private javax.swing.JMenuItem alignRightMenuItem;
    private javax.swing.JMenuItem alignTopMenuItem;
    private javax.swing.JButton alignVerticalBottomButton;
    private javax.swing.JButton alignVerticalMiddleButton;
    private javax.swing.JButton alignVerticalTopButton;
    private javax.swing.JMenu alignmentMenu;
    private javax.swing.JToolBar.Separator alignmentSeparator;
    private javax.swing.JMenu chartMenu;
    private javax.swing.JToolBar.Separator chartSeparator;
    private javax.swing.JToggleButton chartVisibilityToggleButton;
    private javax.swing.JMenuItem closeMenuItem;
    private javax.swing.JPopupMenu.Separator closeSeparator;
    private javax.swing.JMenuItem contentMenuItem;
    private javax.swing.JButton copyButton;
    private javax.swing.JMenuItem copyMenuItem;
    private javax.swing.JToolBar.Separator copyPasteToolBarSeparator;
    private javax.swing.JButton cutButton;
    private javax.swing.JMenuItem cutMenuItem;
    private javax.swing.JButton editChartButton;
    private javax.swing.JMenuItem editChartMenuItem;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JPopupMenu.Separator exportSeparator;
    private javax.swing.JMenuItem exportToExcelCSVMenuItem;
    private javax.swing.JMenuItem exportToUnixCSVMenuItem;
    private javax.swing.JPopupMenu.Separator fileIOSeparator;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem findReplaceMenuItem;
    private javax.swing.JToolBar.Separator fontStyleSeparator;
    private javax.swing.JMenu helpMenu;
    private javax.swing.JPopupMenu.Separator horizontalSeparator;
    private javax.swing.JButton insertColumnButton;
    private javax.swing.JMenuItem insertColumnMenuItem;
    private javax.swing.JButton insertRowButton;
    private javax.swing.JMenuItem insertRowMenuItem;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JToolBar mainToolBar;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JButton newButton;
    private javax.swing.JMenuItem newMenuItem;
    private javax.swing.JPopupMenu.Separator newSeparator;
    private javax.swing.JButton openButton;
    private javax.swing.JMenuItem openMenuItem;
    private javax.swing.JButton pasteButton;
    private javax.swing.JMenuItem pasteMenuItem;
    private javax.swing.JMenuItem printMenuItem;
    private javax.swing.JPopupMenu.Separator printSeparator;
    private javax.swing.JButton redoButton;
    private javax.swing.JMenuItem redoMenuItem;
    private javax.swing.JButton removeChartButton;
    private javax.swing.JMenuItem removeChartMenuItem;
    private javax.swing.JButton removeColumnButton;
    private javax.swing.JMenuItem removeColumnMenuItem;
    private javax.swing.JButton removeRowButton;
    private javax.swing.JMenuItem removeRowMenuItem;
    private javax.swing.JMenuItem saveAsMenuItem;
    private javax.swing.JButton saveButton;
    private javax.swing.JMenuItem saveMenuItem;
    private javax.swing.JPopupMenu.Separator sheetAddRowSeparator;
    private javax.swing.JMenu sheetMenu;
    private javax.swing.JMenu sheetSortMenu;
    private javax.swing.JCheckBoxMenuItem showChartCheckBoxMenuItem;
    private javax.swing.JPopupMenu.Separator showChartSeparator;
    private javax.swing.JButton sortAscendingButton;
    private javax.swing.JMenuItem sortAscendingMenuItem;
    private javax.swing.JButton sortDescendingButton;
    private javax.swing.JMenuItem sortDescendingMenuItem;
    private javax.swing.JToolBar.Separator sortSeparator;
    private javax.swing.JButton styleBoldButton;
    private javax.swing.JButton styleItalicButton;
    private javax.swing.JButton styleUnderlineButton;
    private javax.swing.JToolBar.Separator tableOperationsSeparator;
    private javax.swing.JButton undoButton;
    private javax.swing.JMenuItem undoMenuItem;
    private javax.swing.JPopupMenu.Separator undoRedoSeparator;
    private javax.swing.JToolBar.Separator undoRedoToolBarSeparator;
    private com.gtanalysis.gtexcel.ui.WorkbookPanel workbookPanel;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    private void initCustom() {
        setWorkbookComponentsVisible(false);
        workbookPanel.addWorkbookListener(new WorkbookListener() {
            @Override
            public void workbookCreated(WorkbookEvent evt) {
                setWorkbookComponentsVisible(true);
            }

            @Override
            public void workbookLoaded(WorkbookEvent evt) {
                setWorkbookComponentsVisible(true);
            }

            @Override
            public void workbookSaved(WorkbookEvent evt) {
            }

            @Override
            public void workbookClosed(WorkbookEvent evt) {
                setWorkbookComponentsVisible(false);
            }
        });
        this.workbookPanel.getWorkbookModel().addPropertyChangeListener("undoEnabled", (PropertyChangeEvent evt) -> {
            firePropertyChange("undoEnabled", !isUndoEnabled(), isUndoEnabled());
            firePropertyChange("redoEnabled", !isRedoEnabled(), isRedoEnabled());
            this.workbookPanel.updateUI();
        });
        this.workbookPanel.getWorkbookModel().addPropertyChangeListener("redoEnabled", (PropertyChangeEvent evt) -> {
            firePropertyChange("undoEnabled", !isUndoEnabled(), isUndoEnabled());
            firePropertyChange("redoEnabled", !isRedoEnabled(), isRedoEnabled());
            this.workbookPanel.updateUI();
        });
    }

    public boolean isUndoEnabled() {
        return this.workbookPanel.isUndoEnabled();
    }

    public boolean isRedoEnabled() {
        return this.workbookPanel.isRedoEnabled();
    }

    private void setWorkbookComponentsVisible(boolean visible) {
        tableOperationsSeparator.setVisible(visible);
        insertColumnButton.setVisible(visible);
        insertRowButton.setVisible(visible);
        removeColumnButton.setVisible(visible);
        removeRowButton.setVisible(visible);
        alignmentSeparator.setVisible(visible);
        alignHorizontalLeftButton.setVisible(visible);
        alignHorizontalCenterButton.setVisible(visible);
        alignHorizontalRightButton.setVisible(visible);
        alignVerticalTopButton.setVisible(visible);
        alignVerticalMiddleButton.setVisible(visible);
        alignVerticalBottomButton.setVisible(visible);
        fontStyleSeparator.setVisible(visible);
        styleBoldButton.setVisible(visible);
        styleItalicButton.setVisible(visible);
        styleUnderlineButton.setVisible(visible);
        sortSeparator.setVisible(visible);
        sortAscendingButton.setVisible(visible);
        sortDescendingButton.setVisible(visible);
        chartSeparator.setVisible(visible);
        addChartButton.setVisible(visible);
        editChartButton.setVisible(visible);
        removeChartButton.setVisible(visible);
        chartVisibilityToggleButton.setVisible(visible);
        undoRedoToolBarSeparator.setVisible(visible);
        undoButton.setVisible(visible);
        redoButton.setVisible(visible);
        editMenu.setVisible(visible);
        sheetMenu.setVisible(visible);
        chartMenu.setVisible(visible);
        editMenu.setVisible(visible);
        copyButton.setVisible(visible);
        cutButton.setVisible(visible);
        pasteButton.setVisible(visible);

        // Enable/Disable items
        saveMenuItem.setEnabled(visible);
        saveAsMenuItem.setEnabled(visible);
        exportToExcelCSVMenuItem.setEnabled(visible);
        exportToUnixCSVMenuItem.setEnabled(visible);
        printMenuItem.setEnabled(visible);
        closeMenuItem.setEnabled(visible);

    }

    protected void exitApplication() {
        workbookPanel.exitApplication();
        System.exit(0);
    }

}
